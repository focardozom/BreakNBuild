[{"path":"https://focardozom.github.io/BreakNBuild/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 BreakNBuild authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francisco Cardozo. Author, maintainer.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cardozo F (2024). BreakNBuild: Optimizing Machine Learning Models Sample Size Variation Training Subsets. R package version 0.0.0.9000, https://focardozom.github.io/BreakNBuild/.","code":"@Manual{,   title = {BreakNBuild: Optimizing Machine Learning Models through Sample Size Variation in Training Subsets},   author = {Francisco Cardozo},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://focardozom.github.io/BreakNBuild/}, }"},{"path":[]},{"path":"https://focardozom.github.io/BreakNBuild/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Optimizing Machine Learning Models through Sample Size Variation in Training Subsets","text":"BreakNBuild R package designed evaluate model performance progressively sampled data. approach particularly useful debugging machine learning, allows observe bias-variance trade-relation sample size used training model.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Optimizing Machine Learning Models through Sample Size Variation in Training Subsets","text":"Progressive Data Splitting: partition dataset training validation subsets. Customizable Sample Sizes: Control size training data understand model performance different conditions. Easy Integration: Built rsample package, BreakNBuild seamlessly integrates tidymodels framework. [man/figures/schema_progressive_split.svg]","code":""},{"path":"https://focardozom.github.io/BreakNBuild/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Optimizing Machine Learning Models through Sample Size Variation in Training Subsets","text":"install latest version GitHub, use:","code":"# install.packages(\"devtools\") devtools::install_github(\"https://github.com/focardozom/BreakNBuild\")"},{"path":"https://focardozom.github.io/BreakNBuild/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Optimizing Machine Learning Models through Sample Size Variation in Training Subsets","text":"’s quick example get started:","code":"library(BreakNBuild)  splits <- progressive_splits(data, validation_size = 0.2, start_size = 10)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/apply_rec.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Preprocessing Recipe — apply_rec","title":"Apply Preprocessing Recipe — apply_rec","text":"Preprocesses dataset using specified recipe.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/apply_rec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Preprocessing Recipe — apply_rec","text":"","code":"apply_rec(x, rec)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/apply_rec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Preprocessing Recipe — apply_rec","text":"x dataset preprocessed. rec recipe object specifying preprocessing steps.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/apply_rec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Preprocessing Recipe — apply_rec","text":"preprocessed dataset based provided recipe.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/apply_rec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Preprocessing Recipe — apply_rec","text":"","code":"if (FALSE) {   # Assuming 'rec' is a predefined recipe object and 'data' is available   preprocessed_data <- apply_rec(data, rec) }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/create_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Plot from Model Results — create_plot","title":"Create a Plot from Model Results — create_plot","text":"function takes model data splits, computes validation training errors, generates plot compare errors.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/create_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Plot from Model Results — create_plot","text":"","code":"create_plot(x, y)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/create_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Plot from Model Results — create_plot","text":"x machine learning model object. y object containing data splits.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/create_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Plot from Model Results — create_plot","text":"ggplot object visualizing validation training errors.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/create_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Plot from Model Results — create_plot","text":"","code":"if (FALSE) {   # Assuming lm_model and data_splits are available   create_plot(lm_model, data_splits) }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/extrac_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Prepare Preprocessor from Model — extrac_prep","title":"Extract and Prepare Preprocessor from Model — extrac_prep","text":"Extracts preprocessor model applies provided data.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/extrac_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Prepare Preprocessor from Model — extrac_prep","text":"","code":"extrac_prep(model, x)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/extrac_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and Prepare Preprocessor from Model — extrac_prep","text":"model model object, typically workflow recipe. x dataset preprocessed.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/extrac_prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and Prepare Preprocessor from Model — extrac_prep","text":"preprocessed dataset, preprocessing steps defined model applied x.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/extrac_prep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and Prepare Preprocessor from Model — extrac_prep","text":"","code":"if (FALSE) {   # Assuming 'model' is a predefined model object and 'data' is available   preprocessed_data <- extrac_prep(model, data) }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/extract_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Fitted Model Object from Resampling — extract_fit","title":"Extract Fitted Model Object from Resampling — extract_fit","text":"Extracts fitted model object resample. function simplifies process extracting fit parameters model object created using parsnip package. particularly useful scenarios model objects embedded within resampled results.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/extract_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Fitted Model Object from Resampling — extract_fit","text":"","code":"extract_fit(x)  extract_fit(x)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/extract_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Fitted Model Object from Resampling — extract_fit","text":"x model object, typically resulting resampling process (e.g., using fit_resamples rsample package).","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/extract_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Fitted Model Object from Resampling — extract_fit","text":"list extracted fitted model objects. Returns extracted fit parameters provided model object.","code":""},{"path":[]},{"path":"https://focardozom.github.io/BreakNBuild/reference/extract_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Fitted Model Object from Resampling — extract_fit","text":"","code":"if (FALSE) {   # Assuming 'resample_result' is predefined   fitted_models <- extract_fit(resample_result) } if (FALSE) { data(iris) model <- linear_reg() |> set_engine(\"lm\") resamples <- vfold_cv(iris) fit_results <- model |> fit_resamples(resamples) extracted_params <- extract_fit(fit_results) }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_analysis_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Validation Data and Augmented Predictions — get_analysis_augment","title":"Extract Validation Data and Augmented Predictions — get_analysis_augment","text":"Performs resampling model extracts validation data augmented predictions.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_analysis_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Validation Data and Augmented Predictions — get_analysis_augment","text":"","code":"get_analysis_augment(model, splits)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_analysis_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Validation Data and Augmented Predictions — get_analysis_augment","text":"model machine learning model object, compatible tune::fit_resamples. splits Resampling splits object, usually created using rsample package.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_analysis_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Validation Data and Augmented Predictions — get_analysis_augment","text":"tibble containing augmented prediction data validation set.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_analysis_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Validation Data and Augmented Predictions — get_analysis_augment","text":"","code":"if (FALSE) {   # Assuming 'model' and 'splits' are predefined   validation_data <- get_analysis_augment(model, splits) }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Plot from Validation and Training Results — get_plot","title":"Generate a Plot from Validation and Training Results — get_plot","text":"function takes results model validation training, creates line plot comparing two.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Plot from Validation and Training Results — get_plot","text":"","code":"get_plot(validation_results, training_results)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Plot from Validation and Training Results — get_plot","text":"validation_results data frame validation results. training_results data frame training results.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Plot from Validation and Training Results — get_plot","text":"ggplot object representing validation training results.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Plot from Validation and Training Results — get_plot","text":"","code":"if (FALSE) {   # Assuming validation_results and training_results are available   get_plot(validation_results, training_results) }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_training_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Training Error for Machine Learning Models — get_training_error","title":"Calculate Training Error for Machine Learning Models — get_training_error","text":"Computes training error given machine learning model using resampled datasets. function designed fit model split data, predict outcomes, calculate performance metric (e.g., R-squared) resample.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_training_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Training Error for Machine Learning Models — get_training_error","text":"","code":"get_training_error(model, splits, metric)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_training_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Training Error for Machine Learning Models — get_training_error","text":"model machine learning model object compatible fit_resamples method. splits object containing data splits, typically generated functions rsample package, used resampling. metric performance metric interest string.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_training_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Training Error for Machine Learning Models — get_training_error","text":"data frame containing performance metric (R-squared default) resample identification error type \"Training\".","code":""},{"path":[]},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_training_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Training Error for Machine Learning Models — get_training_error","text":"","code":"if (FALSE) { library(tidymodels) # assuming tidymodels includes necessary packages data(iris) model <- linear_reg() |> set_engine(\"lm\") splits <- initial_split(iris, prop = 0.75) training_error <- get_training_error(model, splits) }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Analysis Data from Resampling Results — get_validation_augment","title":"Augment Analysis Data from Resampling Results — get_validation_augment","text":"function fits model resampled datasets, preprocesses analysis data, augments .","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Analysis Data from Resampling Results — get_validation_augment","text":"","code":"get_validation_augment(model, splits)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Analysis Data from Resampling Results — get_validation_augment","text":"model machine learning model object, compatible tune::fit_resamples. splits Resampling splits object, usually created using rsample package.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Analysis Data from Resampling Results — get_validation_augment","text":"tibble containing augmented data analysis portion resampling splits.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment Analysis Data from Resampling Results — get_validation_augment","text":"","code":"if (FALSE) {   # Assuming 'model' is a predefined model object and 'splits' is defined   analysis_data <- get_validation_augment(model, splits) }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Validation Error for Machine Learning Models — get_validation_error","title":"Calculate Validation Error for Machine Learning Models — get_validation_error","text":"Computes validation error given machine learning model using resampled datasets. function fits model split data collects filters performance metrics, specifically focusing R-squared (rsq) validation.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Validation Error for Machine Learning Models — get_validation_error","text":"","code":"get_validation_error(model, splits, metric)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Validation Error for Machine Learning Models — get_validation_error","text":"model machine learning model object, expected compatible fit_resamples method tune package. splits object containing data splits, typically generated functions rsample package, used resampling. metric performance metric interest string.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Validation Error for Machine Learning Models — get_validation_error","text":"data frame containing R-squared metric resample along identification error type \"Validation\".","code":""},{"path":[]},{"path":"https://focardozom.github.io/BreakNBuild/reference/get_validation_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Validation Error for Machine Learning Models — get_validation_error","text":"","code":"if (FALSE) { library(dplyr) library(tidymodels) # assuming tidymodels includes necessary packages data(iris) model <- linear_reg() %>% set_engine(\"lm\") splits <- vfold_cv(iris, v = 5) validation_error <- get_validation_error(model, splits) }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/plot_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Customized ggplot2 Theme — plot_theme","title":"Create a Customized ggplot2 Theme — plot_theme","text":"function generates customized theme ggplot2 plots. modifies elements legend position, axis text, line colors.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/plot_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Customized ggplot2 Theme — plot_theme","text":"","code":"plot_theme()"},{"path":"https://focardozom.github.io/BreakNBuild/reference/plot_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Customized ggplot2 Theme — plot_theme","text":"ggplot2::theme object can added ggplot2 plots.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/plot_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Customized ggplot2 Theme — plot_theme","text":"","code":"if (FALSE) {   ggplot(data, aes(x, y)) +   geom_line() +   plot_theme() }"},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_splits.html","id":null,"dir":"Reference","previous_headings":"","what":"Progressive Split of Dataset for Model Evaluation — progressive_splits","title":"Progressive Split of Dataset for Model Evaluation — progressive_splits","text":"Dynamically partitions dataset training validation subsets, allowing evaluation machine learning model performance across varying sample sizes.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_splits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progressive Split of Dataset for Model Evaluation — progressive_splits","text":"","code":"progressive_splits(data, assessment_size = 0, start_size = 2)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_splits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progressive Split of Dataset for Model Evaluation — progressive_splits","text":"data data frame containing dataset split. start_size integer indicating initial size training set. Must least 1 less number rows dataset minus size validation set. Default 2. validation_size numeric value 0 1 indicating proportion dataset used validation set. Default 0.2.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_splits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Progressive Split of Dataset for Model Evaluation — progressive_splits","text":"object class 'rset' containing training validation splits iteration increasing training set size.","code":""},{"path":[]},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_splits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Progressive Split of Dataset for Model Evaluation — progressive_splits","text":"","code":"# Example usage: data(iris) splits <- progressive_splits(iris, validation_size = 0.2, start_size = 10) #> Error in progressive_splits(iris, validation_size = 0.2, start_size = 10): unused argument (validation_size = 0.2)"}]
