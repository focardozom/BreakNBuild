[{"path":"https://focardozom.github.io/BreakNBuild/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 BreakNBuild authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francisco Cardozo. Author, maintainer.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cardozo F (2024). BreakNBuild: Optimizing Machine Learning Models Sample Size Variation Training Subsets. R package version 0.0.0.9000, https://focardozom.github.io/BreakNBuild/.","code":"@Manual{,   title = {BreakNBuild: Optimizing Machine Learning Models through Sample Size Variation in Training Subsets},   author = {Francisco Cardozo},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://focardozom.github.io/BreakNBuild/}, }"},{"path":[]},{"path":"https://focardozom.github.io/BreakNBuild/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Optimizing Machine Learning Models through Sample Size Variation in Training Subsets","text":"BreakNBuild R package designed evaluate model performance progressively sampled data. approach particularly useful debugging machine learning, allows observe bias-variance trade-relation sample size used training model.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Optimizing Machine Learning Models through Sample Size Variation in Training Subsets","text":"Progressive Data Splitting: Dynamically partition dataset training validation subsets. Customizable Sample Sizes: Control size training data understand model performance different conditions. Easy Integration: Built rsample package, BreakNBuild seamlessly integrates tidymodels framework.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Optimizing Machine Learning Models through Sample Size Variation in Training Subsets","text":"install latest version GitHub, use:","code":"# install.packages(\"devtools\") devtools::install_github(\"YourUsername/BreakNBuild\")"},{"path":"https://focardozom.github.io/BreakNBuild/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Optimizing Machine Learning Models through Sample Size Variation in Training Subsets","text":"’s quick example get started:","code":"library(BreakNBuild)  splits <- progressive_split(data, validation_size = 0.2, start_size = 10)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Progressive Split of Dataset for Model Evaluation — progressive_split","title":"Progressive Split of Dataset for Model Evaluation — progressive_split","text":"Dynamically partitions dataset training validation subsets, allowing evaluation machine learning model performance across varying sample sizes.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progressive Split of Dataset for Model Evaluation — progressive_split","text":"","code":"progressive_split(data, validation_size = 0.2, start_size = 2)"},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progressive Split of Dataset for Model Evaluation — progressive_split","text":"data data frame containing dataset split. validation_size numeric value 0 1 indicating proportion dataset used validation set. Default 0.2. start_size integer indicating initial size training set. Must least 1 less number rows dataset minus size validation set. Default 2.","code":""},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Progressive Split of Dataset for Model Evaluation — progressive_split","text":"object class 'rset' containing training validation splits iteration increasing training set size.","code":""},{"path":[]},{"path":"https://focardozom.github.io/BreakNBuild/reference/progressive_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Progressive Split of Dataset for Model Evaluation — progressive_split","text":"","code":"# Example usage: data(iris) splits <- progressive_split(iris, validation_size = 0.2, start_size = 10)"}]
